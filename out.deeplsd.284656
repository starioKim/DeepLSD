Using device: cuda
Processing batches:   0%|          | 0/18 [00:00<?, ?it/s]Processing batches:   0%|          | 0/18 [01:00<?, ?it/s]
Traceback (most recent call last):
  File "/nfs/home/stario/DeepLSD/lsd_demo.py", line 77, in <module>
    out = net({'image': batch_input})
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/nfs/home/stario/DeepLSD/deeplsd/models/base_model.py", line 71, in forward
    return self._forward(data)
  File "/nfs/home/stario/DeepLSD/deeplsd/models/deeplsd_inference.py", line 78, in _forward
    base = self.backbone(data['image'])
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/nfs/home/stario/DeepLSD/deeplsd/models/backbones/vgg_unet.py", line 87, in forward
    features.append(block(self.pool(features[-1])))
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/container.py", line 240, in forward
    input = module(input)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/modules/activation.py", line 133, in forward
    return F.relu(input, inplace=self.inplace)
  File "/nfs/home/stario/.local/lib/python3.10/site-packages/torch/nn/functional.py", line 1704, in relu
    result = torch.relu(input)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 4.65 GiB. GPU 0 has a total capacity of 23.64 GiB of which 4.21 GiB is free. Including non-PyTorch memory, this process has 19.42 GiB memory in use. Of the allocated memory 16.62 GiB is allocated by PyTorch, and 2.36 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
